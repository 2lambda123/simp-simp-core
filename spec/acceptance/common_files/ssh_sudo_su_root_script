#!/usr/bin/expect -f

set user [lindex $argv 0]
set host [lindex $argv 1]
set pass [lindex $argv 2]
set extraopts [lindex $argv 3]
set timeout 10

if { $extraopts == "" } {
 spawn ssh -o PubkeyAuthentication=no -o StrictHostKeyChecking=no -o NumberOfPasswordPrompts=1 $host -l $user ;
} else {
 spawn ssh -o PubkeyAuthentication=no -o StrictHostKeyChecking=no -o NumberOfPasswordPrompts=1 $extraopts $host -l $user
}

# wait for password prompt
expect "*password:"
send "$pass\r"

# wait for username in command line prompt before sending each command
expect "$user@$host "
send "whoami\r"
expect "$user@$host "
send "pwd\r"
expect "$user@$host "
send "sudo su - root\r"

# root may not have /etc/bashrc in its bashrc, so wait
# for a minimal prompt separator ' ' (yes, a very weak
# expectation) and then source the /etc/bashrc to get
# a better expect string
expect " "
send "source /etc/bashrc\r"

# wait for root in command line prompt before sending each command
expect "root@$host "
send "whoami\r"
expect "root@$host "
send "pwd\r"

# run a command that a normal user cannot run
expect "root@$host "
send "tail -n 5 /var/log/messages\r"

# By default, tlog will cache up to 10 seconds or 2048 bytes before writing
# to its log. Add more bytes to get it to flush its cache.
expect "root@$host "
send "echo 'Hello 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\r"

expect "root@$host "
send "echo 'Hello 11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\r"

expect "root@$host "
send "echo 'Hello 22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222'\r"

expect "root@$host "
send "echo 'Hello 33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333'\r"

expect "root@$host "
send "echo 'Hello 44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444'\r"

expect "root@$host "
send "echo 'Hello 55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555'\r"

expect "root@$host "
send "echo 'Hello 66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666'\r"

expect "root@$host "
send "echo 'Hello 77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777'\r"

expect "root@$host "
send "echo 'Hello 88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888'\r"

expect "root@$host "
send "echo 'Hello 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999'\r"

# exit root session
expect "root@$host "
send "exit 0\r"

# wait for username in command line prompt before sending each command
expect "$user@$host "
send "whoami\r"
expect "$user@$host "
send "pwd\r"
expect "$user@$host "
send "exit 0\r"

catch wait result
exit [lindex $result 3]
