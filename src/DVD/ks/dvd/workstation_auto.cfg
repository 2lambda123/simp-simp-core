install
cdrom
text
keyboard us
lang en_US

%include /mnt/stage2/ks/dvd/include/common_ks_base

%pre
cd /mnt
# This is a horrible, horrible, hack to work around bugs in Anaconda.
if [ ! -d source ]; then
  mkdir -p source
fi
if [ `ls source | wc -l` -eq 0 ]; then
  mount -o bind stage2 source
fi


cp /mnt/stage2/ks/repodetect.sh /tmp;
cp /mnt/stage2/ks/diskdetect.sh /tmp;

chmod +x /tmp/*.sh

/tmp/repodetect.sh `grep version /mnt/stage2/.treeinfo | cut -f2 -d'='`
/tmp/diskdetect.sh
%end

%post --nochroot
# SOURCE is the DVD; SYSIMAGE is the chroot'd root dir
SOURCE="/mnt/source"
SYSIMAGE="/mnt/sysimage"
DEF_VERSION='6'

# Turn off prelinking and remove all previous
sed -i '/PRELINKING=yes/ c\PRELINKING=no' /etc/sysconfig/prelink
prelink -u -a

# Some nonsense to try and re-mount the DVD
if [ -b /dev/cdrom ]; then
  if [ ! -d "$SOURCE" ]; then
    mkdir "$SOURCE";
  fi
  if [ ! -d "$SOURCE/Server" ]; then
    mount -t iso9660 -o ro /dev/cdrom $SOURCE;
  fi
fi

# Get the Linux distribution
# The $1 element of redhat-release is "CentOS" or "Red"
# The latter is changed to RedHat
ostype=`awk '{print $1}' ${SYSIMAGE}/etc/redhat-release 2>/dev/null`;
if [ $ostype == "Red" ]; then
  ostype="RedHat"
fi

# Get the version of RedHat/CentOS we're running under
rhversion=`sed -n '3{p; q }' /.buildstamp 2>/dev/null`;
# If this screws up for some reason, put something sane in place.
if [ -z $rhversion ]; then
    rhversion=$DEF_VERSION
fi

htype=`uname -m`;
if [ $htype != "x86_64" ]; then
    htype="i386";
fi

UMASKSAVE=`umask`
umask 0002
pushd .
mkdir -p ${SYSIMAGE}/srv/www/yum/$ostype/$rhversion/$htype
cd ${SOURCE}
if [ $? -ne 0 ]; then
  echo "There was a problem changing directory to ${SOURCE}, the DVD will not be copied to disk." | tee ${SYSIMAGE}/root/postinstall.err
  echo "Run the following commands once the install has completed:" | tee -a ${SYSIMAGE}/root/postinstall.err
  echo -e "\tmount /dev/dvd /media" | tee -a ${SYSIMAGE}/root/postinstall.err
  echo -e "\tcp -a /media/* /media/.discinfo /media/.treeinfo /srv/www/yum/$ostype/$rhversion/$htype" | tee -a ${SYSIMAGE}/root/postinstall.err
  echo -e "\trm -rf /srv/www/yum/$ostype/$rhversion/$htype/ks/dvd" | tee -a ${SYSIMAGE}/root/postinstall.err
  echo -e "\tcp -a /srv/www/yum/$ostype/$rhversion/$htype/SIMP /srv/www/yum/SIMP" | tee -a ${SYSIMAGE}/root/postinstall.err
  echo -e "\trm -rf /srv/www/yum/$ostype/$rhversion/$htype/SIMP" | tee -a ${SYSIMAGE}/root/postinstall.err
  echo -e "\tcp -a /srv/www/yum/$ostype/$rhversion/$htype/ks /srv/www" | tee -a ${SYSIMAGE}/root/postinstall.err
  echo -e "\trm -rf /srv/www/yum/$ostype/$rhversion/$htype/ks" | tee -a ${SYSIMAGE}/root/postinstall.err
  echo -e "\tcd /srv/www/yum/SIMP/x86_64; for file in ../noarch/*.rpm do; ln -s $file; done;" | tee -a ${SYSIMAGE}/root/postinstall.err
  echo -e "\tcd createrepo .;" | tee -a ${SYSIMAGE}/root/postinstall.err
  echo -e "\tcd /srv/www/yum/SIMP/i386; for file in ../noarch/*.rpm do; ln -s $file; done;" | tee -a ${SYSIMAGE}/root/postinstall.err
  echo -e "\tcd createrepo .;" | tee -a ${SYSIMAGE}/root/postinstall.err
else
  cp -a * .discinfo .treeinfo ${SYSIMAGE}/srv/www/yum/$ostype/$rhversion/$htype
  cp -a ${SYSIMAGE}/srv/www/yum/$ostype/$rhversion/$htype/SIMP ${SYSIMAGE}/srv/www/yum
  rm -rf ${SYSIMAGE}/srv/www/yum/$ostype/$rhversion/$htype/SIMP
  cp -a ${SYSIMAGE}/srv/www/yum/$ostype/$rhversion/$htype/ks ${SYSIMAGE}/srv/www
  rm -rf ${SYSIMAGE}/srv/www/yum/$ostype/$rhversion/$htype/ks
  rm -rf ${SYSIMAGE}/srv/www/yum/$ostype/$rhversion/$htype/Config
  rm -rf ${SYSIMAGE}/srv/www/yum/$ostype/$rhversion/$htype/*simp_pkglist.txt
fi

# Copy the SIMP bootstrap config to /tmp

cp ks/dvd/include/simp_bootstrap_config ${SYSIMAGE}/tmp

if [ "$rhversion" != "$DEF_VERSION" ]; then
    pushd .;
    cd ${SYSIMAGE}/srv/www/yum/$ostype;
    ln -s $rhversion "$DEF_VERSION";
    popd
fi

popd
umask $UMASKSAVE
umount "${SOURCE}"

chown -R root.48 ${SYSIMAGE}/srv/www;
chmod -R u=rwX,g=rX,o-rwx ${SYSIMAGE}/srv/www;

eject /tmp/cdrom
%end

%post
/sbin/chkconfig --add network;
/sbin/chkconfig --add httpd;
/sbin/chkconfig --level 2345 puppetmaster on;
/sbin/chkconfig --level 345 named on;
/sbin/chkconfig --level 345 nscd on;
/sbin/chkconfig --level 345 ldap on;
/sbin/chkconfig --level 345 named on;
/sbin/chkconfig --level 345 xinetd on;
/sbin/chkconfig --level 2345 rsyslog on;

ln -s /srv/www/yum /var/www/yum;
ln -s /srv/www/ks /var/www/ks;

ostype=`lsb_release -i | awk '{print $3}'`;
if [ $ostype == "RedHatEnterpriseServer" ]; then
  ostype="RedHat"
fi
rhversion=`lsb_release -r | sed -e 's/.*:[[:space:]]*\(.*\)$/\1/'`;
htype=`uname -m`;
if [ $htype != "x86_64" ]; then
    htype="i386";
fi

if [ -d /srv/www/yum/SIMP/x86_64 ]; then
  cd /srv/www/yum/SIMP/x86_64;

  for file in ../noarch/*.rpm; do
    ln -s $file;
  done

  createrepo . >& /dev/null;

  if [ $htype == "x86_64" ]; then
    cat << EOF >> /etc/yum.repos.d/filesystem.repo
[flocal-x86_64]
name=Local within the filesystem
baseurl=file:///srv/www/yum/SIMP/x86_64
enabled=1
gpgcheck=0
EOF
  fi
fi

if [ -d /srv/www/yum/SIMP/i386 ]; then
  cd /srv/www/yum/SIMP/i386;

  for file in ../noarch/*.rpm; do
    ln -s $file;
  done

  createrepo . >& /dev/null;

  if [ $htype == "i386" ]; then
    cat << EOF >> /etc/yum.repos.d/filesystem.repo
[flocal-i386]
name=Local within the filesystem
baseurl=file:///srv/www/yum/SIMP/i386
enabled=1
gpgcheck=0
EOF
  fi
fi

yum clean all;
yum -y --enablerepo=flocal-noarch --enablerepo=flocal-$htype update;

if [ $ostype == "RedHat" ]; then
  cat << EOF >> /etc/yum.repos.d/filesystem.repo

[frhbase]
name=$ostype $rhversion base repo
baseurl=file:///srv/www/yum/$ostype/$rhversion/$htype/Server
enabled=1
gpgcheck=0
EOF
fi

if [ $ostype == "CentOS" ]; then
  cat << EOF >> /etc/yum.repos.d/filesystem.repo

[frhbase]
name=$ostype $rhversion base repo
baseurl=file:///srv/www/yum/$ostype/$rhversion/$htype
enabled=1
gpgcheck=0
EOF
  sed -i '/enabled=/d' /etc/yum.repos.d/CentOS-Base.repo; 
  sed -i '/\[.*\]/ a\
enabled=0' /etc/yum.repos.d/CentOS-Base.repo; 
fi

pass_hash='$6$To3L7VhrftMmeSwt$d4a2eqWghCwNA2fv0piCd3xISKbh/9w/9YUESH7nfc.S7rJFTm3G8fbzrjoYqn5purLRAtDhwR36R/AQZRJDZ.'

groupadd -g 1777 simp >& /dev/null;
useradd -d /var/local/simp -g simp -m -p $pass_hash -s /bin/bash -u 1777 -K PASS_MAX_DAYS=90 -K PASS_MIN_DAYS=1 -K PASS_WARN_AGE=7 simp >& /dev/null;
usermod -aG wheel simp;
chage -d 0 root;
chage -d 0 simp;

# Bootstrap and cleanup for workstation mode

bootstrap_log=/root/simp_bootstrap_log.txt;
bootstrap_config=/tmp/simp_bootstrap_config;

if [ -f ${bootstrap_config} ]; then
  chvt 5
  exec < /dev/tty5 > /dev/tty5

  cd /etc/puppet/manifests/nodes;
  cp puppet_servers.pp puppet_servers.pp.orig;

  cat > puppet_servers.pp << EOF
node puppet {
  include "common::stock::workstation_lockdown"
}
EOF

  cp /etc/puppet/manifests/site.pp /etc/puppet/manifests/site.pp.orig;
  sed -i 's/http:\/\/${yum_server}/file:\/\/\/srv\/www/' /etc/puppet/manifests/site.pp;
  
  echo >> /tmp/simp_config_infile;
  echo >> /tmp/simp_config_infile;

  simp config -a ${bootstrap_config} < /tmp/simp_config_infile | tee ${bootstrap_log};

  while ( ps -C simp ); do sleep 2; echo '*'; done

  simp bootstrap | tee -a ${bootstrap_log};

  while ( ps -C simp ); do sleep 2; echo '*'; done

  echo "Cleaning Up" | tee -a ${bootstrap_log};

  yum remove -y httpd openldap-servers puppet | tee -a ${bootstrap_log};
  rm -rf /etc/puppet /etc/httpd /var/lib/puppet /etc/rsync*;
  rm -rf /tmp/*;

  chvt 1
  exec < /dev/tty0 > /dev/tty1
else
  i=0
  while [ $i -lt 3 ]; do
    echo "Error: ${bootstrap_config} not found" | tee -a ${bootstrap_log};
    sleep 10;
    i=$(( $i + 1 ));
  done
fi
%end
