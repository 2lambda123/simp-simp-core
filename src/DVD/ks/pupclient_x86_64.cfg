# Replace the following strings in this file
# #BOOTPASS# - Your SHA-512 hashed bootloader password
# #ROOTPASS# - Your SHA-512 hashed root password
# #KSSERVER# - The IP address of your YUM server
# #YUMSERVER# - The IP address of your YUM server
# #LINUXDIST# - The LINUX Distribution you are kickstarting
#        - Current CASE SENSITIVE options: RedHat CentOS
#
# BOOTLOADER hash generation:
#  > grub-crypt
#
# ROOTPASS hash generation:
#  > ruby -r 'digest/sha2' -e 'puts "password".crypt("$6$" + rand(36**8).to_s(36))'

authconfig --enableshadow --passalgo=sha512
bootloader --location=mbr --append="fips=1 console=ttyS1,57600 console=tty1" --iscrypted --password=#BOOTPASS#
rootpw --iscrypted #ROOTPASS#
zerombr
key --skip
firewall --enabled --ssh
firstboot --disable
logging --level=info
network --bootproto=dhcp
reboot
selinux --enforcing
timezone --utc GMT

install
skipx

%include /tmp/repo-include

text
keyboard us
lang en_US
url --url http://#KSSERVER#/yum/#LINUXDIST#/6/x86_64

%include /tmp/part-include

%packages --nobase
redhat-lsb
xorg-x11-xauth
acl
rpm
yum
bzip2
crontabs
libutempter
pciutils
psacct
quota
tmpwatch
vixie-cron
amtu
anacron
coolkey
cpuspeed
cryptsetup-luks
dhclient
gnupg
irqbalance
krb5-workstation
libaio
logwatch
logrotate
mdadm
microcode_ctl
nss_db
openssh-clients
openssh-server
pam_krb5
pam_passwdqc
pam_pkcs11
ntp
readahead
smartmontools
stunnel
sudo
tcp_wrappers
unzip
usbutils
vconfig
wget
which
zip
aide
iptables
iptables-ipv6
netlabel_tools
audit
lsscsi
net-snmp
sysstat
vlock
mutt
subversion
-sysklogd
rsyslog7
-rsyslog
lsof
vim-enhanced
-sendmail
# dracut
## Uncomment the line above and comment out the following to prevent boot-time
## FIPS checks.
dracut-fips
fipscheck
# Puppet stuff
puppet
facter
rsync
ruby-rdoc
# In case of broken repo, these should be installed.
hdparm
kbd
libhugetlbfs
policycoreutils
prelink
rootfiles
selinux-policy-targeted
setserial
sysfsutils
udftools
%end

%pre
ksserver="#KSSERVER#"
wget -O /tmp/diskdetect.sh http://$ksserver/ks/diskdetect.sh;
chmod 750 /tmp/diskdetect.sh;
/tmp/diskdetect.sh;
wget -O /tmp/repodetect.sh http://$ksserver/ks/repodetect.sh;
chmod 750 /tmp/repodetect.sh;
/tmp/repodetect.sh '6' $ksserver;
%end

%post
ostype="#LINUXDIST#"
if [ $ostype == "CentOS" ]; then
  sed -i '/enabled=/d' /etc/yum.repos.d/CentOS-Base.repo;
  sed -i '/\[.*\]/ a\
enabled=0' /etc/yum.repos.d/CentOS-Base.repo;
fi
ksserver="#KSSERVER#"

# Turn off prelinking and remove all previous linking
sed -i '/PRELINKING=yes/ c\PRELINKING=no' /etc/sysconfig/prelink
prelink -u -a

### Comment out/remove this section to disable FIPS ###
# FIPS
if [ -e /sys/firmware/efi ]; then
  BOOTDEV=`df /boot/efi | tail -1 | cut -f1 -d' '`
else
  BOOTDEV=`df /boot | tail -1 | cut -f1 -d' '`
fi
# In case you need a working fallback
DEFAULT_KERNEL_INFO=`/sbin/grubby --default-kernel`
DEFAULT_INITRD=`/sbin/grubby --info=${DEFAULT_KERNEL_INFO} | grep initrd | cut -f2 -d'='`
DEFAULT_KERNEL_TITLE=`/sbin/grubby --info=${DEFAULT_KERNEL_INFO} | grep -m1 title | cut -f2 -d'='`
/sbin/grubby --copy-default --make-default --args="boot=${BOOTDEV} fips=1" --add-kernel=`/sbin/grubby --default-kernel` --initrd=${DEFAULT_INITRD} --title="FIPS ${DEFAULT_KERNEL_TITLE}"
dracut -f
### END FIPS ###

# Enable the firstboot bootstrapping script.
wget --no-check-certificate -O /etc/init.d/runpuppet http://$ksserver/ks/runpuppet;
chmod 700 /etc/rc.d/init.d/runpuppet;
chkconfig --add runpuppet;
chkconfig --level 35 runpuppet on;
%end
